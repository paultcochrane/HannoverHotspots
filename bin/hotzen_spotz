#!/usr/bin/env perl

=head1 NAME

hotzen_spotz - add, edit and delete HannoverHotspots entries

=head1 SYNOPSIS

    $ hotzen_spotz
    spotz_editor> add
    ...
    spotz_editor> edit
    ...
    spotz_editor> delete
    ...
    spotz_editor> list
    ...
    spotz_editor> help
    ...

=head1 DESCRIPTION

Starts an interactive shell with commands to add, edit and delete entries in
the list of WLAN hotspots in Hannover, Germany.

=head1 AUTHOR

Paul Cochrane <paul@liekut.de>

=head1 COPYRIGHT AND LICENSE

This program is free software; you may redistribute it and/or modify it
under the same terms as Perl itself.

=cut

use warnings;
use strict;
use autodie;
use Pod::Usage;

use IO::Prompt;
use JSON;

use lib qw( lib );
use HotspotsEditor;

=over 4

=item hotzen_spotz()

Run the main command loop.

=cut

sub hotzen_spots {
    print "Welcome to the Hannover Hotspot editor, version 0.1\n";
    print "Use Ctrl+D to exit, type 'help' or '?' for help.\n";

    my $editor = HotspotsEditor->new();
    my $prompt = "spotz_editor> ";
    while( prompt $prompt ) {
        if ($_ eq "exit") {
            $editor->exit_program();
        }
        elsif ($_ eq "add") {
            $editor->add_entry();
        }
        elsif ($_ eq "list") {
            list_entries();
        }
        elsif ($_ eq "help") {
            print_help();
        }
        else {
            print "Unknown command: $_\n";
        }
    }
}

=item list_entries()

List all available WLAN hotspot entries.

=cut

sub list_entries {
    my $json = JSON->new();
    $json->utf8();

    open my $hotspots_fh, "<", "hannover_hotspots.json";
    my @hotspots_lines = <$hotspots_fh>;
    close $hotspots_fh;

    my $hotspots_json = join "", @hotspots_lines;
    my $geojson = $json->decode($hotspots_json);
    my @features = @{$geojson->{'features'}};
    my $index = 1;
    for my $location ( @features ) {
        print "[", $index, "] ", $location->{'properties'}->{'name'}, "\n";
        $index++;
    }
}

=item print_help()

Print a list of available commands.

=cut

sub print_help {
    print "Available commands:\n";
    print "    add:  add a new hotspot entry\n";
    print "    list: list available hotspot entries\n";
    print "    help: display this help\n";
}

hotzen_spots() unless caller();

=back

=cut

# vim: expandtab shiftwidth=4 softtabstop=4
